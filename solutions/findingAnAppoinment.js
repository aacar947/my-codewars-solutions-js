// Finding an appointment
// https://www.codewars.com/kata/525f277c7103571f47000147

const getTime = (t) => parseInt(t.split(':')[0]) * 60 + parseInt(t.split(':')[1]),
  formatTime = (t) => ('0' + Math.floor(t / 60)).slice(-2) + ':' + ('0' + (t % 60)).slice(-2),
  endTime = getTime('19:00'),
  start = getTime('09:00');

function getStartTime(sche, dur) {
  const points = sche
    .reduce((ac, bp) => {
      bp.forEach((t) => {
        ac.push([getTime(t[0]), 1], [getTime(t[1]), -1]);
      });
      return ac;
    }, [])
    .sort((a, b) => a[0] - b[0]);

  points.unshift([start, 0]);

  let BP = 0;
  for (let i = 0; i < points.length; i++) {
    BP += points[i][1];
    if (BP === 0 && (points[i + 1] || [endTime])[0] - points[i][0] >= dur) {
      return formatTime(points[i][0]);
    }
  }
  return null;
}

// Test Cases
const schedules = [
    [
      ['09:00', '11:30'],
      ['13:30', '16:00'],
      ['16:00', '17:30'],
      ['17:45', '19:00'],
    ],
    [
      ['09:15', '12:00'],
      ['14:00', '16:30'],
      ['17:00', '17:30'],
    ],
    [
      ['11:30', '12:15'],
      ['15:00', '16:30'],
      ['17:45', '19:00'],
    ],
  ],
  schedules2 = [
    [
      ['10:00', '11:00'],
      ['12:00', '13:00'],
      ['14:00', '15:00'],
      ['16:00', '17:00'],
      ['18:00', '19:00'],
    ],
    [
      ['10:00', '13:00'],
      ['14:00', '17:00'],
      ['18:00', '19:00'],
    ],
  ],
  schedules3 = [
    [
      ['09:48', '12:26'],
      ['15:41', '15:59'],
      ['18:50', '18:57'],
    ],
    [
      ['09:41', '09:57'],
      ['10:03', '10:14'],
      ['10:32', '10:39'],
      ['10:56', '11:17'],
      ['11:23', '11:41'],
      ['11:59', '12:03'],
      ['12:28', '12:45'],
      ['17:19', '17:27'],
      ['18:56', '18:57'],
    ],
    [
      ['11:21', '12:42'],
      ['12:51', '13:20'],
      ['17:51', '17:53'],
      ['18:07', '18:11'],
    ],
    [
      ['10:07', '10:39'],
      ['10:41', '11:03'],
      ['12:21', '12:22'],
      ['15:49', '16:11'],
      ['17:29', '17:54'],
    ],
    [
      ['09:37', '11:19'],
      ['11:27', '13:37'],
      ['16:29', '17:41'],
    ],
  ],
  schedules4 = [
    [
      ['10:00', '11:00'],
      ['12:00', '13:00'],
      ['14:00', '15:00'],
      ['16:00', '17:00'],
    ],
    [
      ['10:00', '13:00'],
      ['14:00', '17:15'],
    ],
  ];
const test = require('../utils/simpleTester.js'),
  testValues = [
    [[[...schedules], 60], '12:15'],
    [[[...schedules], 90], null],
    [[[...schedules2], 60], '09:00'],
    [[[...schedules3], 38], '13:37'],
    [[[...schedules4], 90], '17:15'],
  ];

test((args) => getStartTime(...args), testValues);
